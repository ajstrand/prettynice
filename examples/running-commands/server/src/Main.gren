module Main exposing (main)

import Node exposing (Environment)
import Prettynice
import Prettynice.Request exposing (Request)
import Prettynice.Response as Response exposing (Response)
import Random


main : Prettynice.Program {} Msg
main =
    Prettynice.defineProgram
        { init = init
        , update = update
        , subscriptions = (\_ -> Sub.none)
        , onRequest = GotRequest
        }


init : Environment -> Prettynice.Init {} Msg
init env =
    Prettynice.startProgram
        { host = "0.0.0.0"
        , port_ = 3000
        , env = env
        , model = {}
        }


type Msg
    = GotRequest Request Response
    | GotRandomNumber Response Int


update : Msg -> {} -> { model : {}, command : Cmd Msg }
update msg model =
    case msg of
        GotRequest request response ->
            { model = model
            , command =
                Random.int 1 9999999
                    |> Random.generate (GotRandomNumber response)
            }

        GotRandomNumber response num ->
            { model = model
            , command = 
                Response.sendText
                    (String.fromInt num)
                    response
            }
